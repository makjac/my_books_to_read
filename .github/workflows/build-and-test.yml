name: Flutter Firebase Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.0"
          channel: "stable"

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Firebase
        run: firebase use --token "$FIREBASE_TOKEN" "$FIREBASE_PROJECT_ID"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Configure FlutterFire
        run: |
          dart pub global activate flutterfire_cli
          flutterfire configure \
            --project="${{ secrets.FIREBASE_PROJECT_ID }}" \
            --platforms=android,ios,web \
            --yes
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Install dependencies
        run: flutter pub get

      - name: Run build_runner
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Analyze code
        run: flutter analyze

      - name: Run unit tests
        run: flutter test

      - name: Setup Android Emulator for integration tests
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86_64
          profile: Nexus 6
          script: |
            flutter drive \
              --driver=test_driver/integration_test.dart \
              --target=integration_test/app_test.dart

      - name: Build APK
        run: flutter build apk

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
